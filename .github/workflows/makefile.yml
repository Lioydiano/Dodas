name: Build and Upload Executable

on:
  push:
    branches: [ main ]
    paths:
      - 'Makefile'
      - 'include/**'
      - '*.cpp'
      - '*.hpp'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Sista dependency
        uses: actions/checkout@v4
        with:
          repository: FLAK-ZOSO/Sista
          path: Sista
          ref: main
          fetch-depth: 1

      - name: Install Sista
        if: matrix.os != 'windows-latest'
        run: |
          cd Sista
          git describe --tags --abbrev=0
          sudo make install
          cd ..

      - name: Install Sista (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd Sista
          make install
          cd ..

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run make
        run: make

      - name: Find Executable
        id: find-exe
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "exe_path=$(find . -type f -name 'dodas.exe' | head -n 1)" >> $GITHUB_OUTPUT
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "exe_path=$(find . -name dodas -type f -perm +111 | head -n 1)" >> $GITHUB_OUTPUT
          else
            echo "exe_path=$(find . -name dodas -type f -perm /111 | head -n 1)" >> $GITHUB_OUTPUT
          fi

      - name: Set artifact name
        id: artifact-name
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "name=linux" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "name=macos" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "name=windows" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: inavjaga-${{ steps.artifact-name.outputs.name }}
          path: ${{ steps.find-exe.outputs.exe_path }}
